{"version":3,"sources":["webpack:///./src/pages/article/jsType/math.vue?4644","webpack:///src/pages/article/jsType/math.vue","webpack:///./src/pages/article/jsType/math.vue?a12f","webpack:///./src/pages/article/jsType/math.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","domProps","_s","format","text","staticRenderFns","component"],"mappings":"yHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,SAAS,CAAC,UAAYN,EAAIO,GAAGP,EAAIQ,OAAOR,EAAIS,WAClJC,EAAkB,GCItB,GACE,KADF,WAEI,MAAJ,CACM,KAAN,gpHCR4W,I,YCOxWC,EAAY,eACd,EACAZ,EACAW,GACA,EACA,KACA,KACA,MAIa,aAAAC,E","file":"js/chunk-2d0c7991.f563a2da.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{domProps:{\"innerHTML\":_vm._s(_vm.format(_vm.text))}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div v-html=\"format(text)\"></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data () {\r\n        return {\r\n            text: `\r\n# math\r\n\r\n## 概述\r\n\r\n·Math·对象提供数学运算功能，不是构造函数，只有属性和静态方法\r\n\r\n## 属性\r\n\r\n!!\r\nMath.E：常数  e\r\nMath.LN2：2 的自然对数\r\nMath.LN10：10 的自然对数\r\nMath.LOG2E：以 2 为底的 e 的对数\r\nMath.LOG10E：以 10 为底的 e 的对数\r\nMath.PI：常数 Pi\r\nMath.SQRT1_2：0.5 的平方根\r\nMath.SQRT2：2 的平方根\r\n!!\r\n\r\n··js\r\nMath.E // 2.718281828459045\r\nMath.LN2 // 0.6931471805599453\r\nMath.LN10 // 2.302585092994046\r\nMath.LOG2E // 1.4426950408889634\r\nMath.LOG10E // 0.4342944819032518\r\nMath.PI // 3.141592653589793\r\nMath.SQRT1_2 // 0.7071067811865476\r\nMath.SQRT2 // 1.4142135623730951\r\n··\r\n\r\n## 常用方法\r\n\r\n!!\r\nMath.ceil()：向上取整\r\nMath.floor()：向下取整\r\nMath.max()：最大值\r\nMath.min()：最小值\r\nMath.round()：四舍五入\r\nMath.random()：0 到 1 之间的随机数，大于等于 0，小于 1\r\n!!\r\n\r\n··js\r\nMath.ceil(3.2) // 4\r\nMath.ceil(-3.2) // -3\r\n\r\nMath.floor(3.2) // 3\r\nMath.floor(-3.2) // -4\r\n\r\nMath.max(2, -1, 5) // 5\r\nMath.min(2, -1, 5) // -1\r\n\r\nMath.round(0.1) // 0\r\nMath.round(0.5) // 1\r\nMath.round(-1.1) // -1\r\nMath.round(-1.5) // -1 （负数时五是舍去）\r\nMath.round(-1.6) // -2\r\n··\r\n\r\n### Math.random()\r\n\r\n··js\r\n// 生成任意范围的随机数\r\nconst random = (min, max) => Math.random() * (max - min) + min\r\nrandom(1.5, 6.5) // 2.4942810038223864\r\n\r\n// 生成任意范围的随机整数\r\nconst randomInt = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min\r\nrandomInt(1, 6) // 5\r\n\r\n// 返回任意长度的随机字符串\r\nconst randomStr = len => {\r\n    const STR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\r\n                'abcdefghijklmnopqrstuvwxyz' +\r\n                '0123456789-_'\r\n    let str = ''\r\n    for (let i = 0; i < len; i++) str += STR[Math.floor(Math.random() * STR.length)]\r\n    return str\r\n}\r\nrandomStr(6) // \"shift\"\r\n··\r\n\r\n## 不常用方法\r\n\r\n!!\r\nMath.abs()：绝对值\r\nMath.pow()：指数运算\r\nMath.sqrt()：平方根\r\nMath.log()：自然对数\r\nMath.exp()：e 的参数次方\r\n!!\r\n\r\n··js\r\nMath.abs(1) // 1\r\nMath.abs(-1) // 1\r\n\r\n// 等同于 2 ** 3\r\nMath.pow(2, 3) // 8\r\n\r\nMath.sqrt(4) // 2\r\nMath.sqrt(-4) // NaN\r\n\r\nMath.log(Math.E) // 1\r\nMath.log(10) // 2.302585092994046\r\n\r\nMath.exp(1) // 2.718281828459045\r\nMath.exp(3) // 20.085536923187668\r\n··\r\n\r\n## 三角函数方法\r\n\r\n!!\r\nMath.sin()：返回参数的正弦（参数为弧度值）\r\nMath.cos()：返回参数的余弦（参数为弧度值）\r\nMath.tan()：返回参数的正切（参数为弧度值）\r\nMath.asin()：返回参数的反正弦（返回值为弧度值）\r\nMath.acos()：返回参数的反余弦（返回值为弧度值）\r\nMath.atan()：返回参数的反正切（返回值为弧度值）\r\n!!\r\n\r\n## es6 方法\r\n\r\n!!\r\nMath.trunc()：取整数部分\r\nMath.sign()：判断返回：正数·+1·、负数·-1·、0·0·、-0·-0·、其他·NaN·\r\nMath.cbrt()：立方根\r\nMath.clz32()：计算一个数的 32 位二进制形式的前导 0 的个数\r\nMath.imul()：两个数以 32 位带符号整数形式相乘的结果，返回的也是一个 32 位的带符号整数\r\nMath.fround()：返回一个数的 32 位单精度浮点数形式\r\nMath.hypot()：所有参数的平方和的平方根\r\nMath.expm1()：e 的参数次方 - 1，即·Math.exp(x) - 1·\r\nMath.log1p()：1 + 参数的自然对数，即·Math.log(1 + x)·，如果参数小于 -1 返回·NaN·\r\nMath.log2()：以 2 为底的参数的对数。如果参数小于 0 返回 NaN\r\nMath.log10()：以 10 为底的参数的对数。如果参数小于 0 返回 NaN\r\n!!\r\n\r\n··js\r\nMath.trunc(-4.9) // -4\r\nMath.trunc(-0.1234) // -0\r\n\r\nMath.sign(-5) // -1\r\nMath.sign(5) // +1\r\nMath.sign(0) // +0\r\nMath.sign(-0) // -0\r\nMath.sign(NaN) // NaN\r\n\r\nMath.cbrt(8) // 2\r\n\r\nMath.clz32(0) // 32，0 的二进制形式全为 0，所以有 32 个前导 0\r\nMath.clz32(1) // 31\r\nMath.clz32(0b01000000000000000000000000000000) // 1\r\n// 左移运算符 << 与 Math.clz32 方法直接相关，相当于 32 减参数之和\r\n// << 是用来将一个数的各二进制位全部左移若干位，例如 8 << n 的值为 8 * (2^n)\r\nMath.clz32(1 <¿< 1) // 30\r\nMath.clz32(1 <¿< 2) // 29\r\n\r\nMath.imul(2, 4) // 8\r\n\r\n// 未丢失有效精度\r\nMath.fround(1.125) // 1.125\r\nMath.fround(7.25)  // 7.25\r\n// 丢失精度\r\nMath.fround(0.3)   // 0.30000001192092896\r\nMath.fround(0.7)   // 0.699999988079071\r\nMath.fround(1.0000000123) // 1\r\n\r\nMath.hypot(3, 4) // 5\r\nMath.hypot(3, 4, 5) // 7.0710678118654755\r\n··\r\n\r\n## es6 三角函数方法\r\n\r\n!!\r\nMath.sinh()：返回参数的双曲正弦\r\nMath.cosh()：返回参数的双曲余弦\r\nMath.tanh()：返回参数的双曲正切\r\nMath.asinh()：返回参数的反双曲正弦\r\nMath.acosh()：返回参数的反双曲余弦\r\nMath.atanh()：返回参数的反双曲正切\r\n!!\r\n\r\n## 指数运算符\r\n\r\nES2016 新增了一个指数运算符·**·\r\n\r\n··js\r\n2 ** 2 // 4\r\n2 ** 3 // 8\r\n··\r\n\r\n当多个连用时从右边开始计算\r\n\r\n··js\r\n2 \\\\** 3 ** 0\r\n// 相当于\r\n2 \\\\** (3 ** 0)\r\n··\r\n\r\n指数运算符可以与等号结合·**=·\r\n\r\n··js\r\na **= 3\r\n// 等同于\r\na = a ** 3\r\n··\r\n\r\n&2019/4/3\r\n`\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./math.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./math.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./math.vue?vue&type=template&id=3283a6d2&\"\nimport script from \"./math.vue?vue&type=script&lang=js&\"\nexport * from \"./math.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}