(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d0c78e0"],{"50b1":function(n,a,e){"use strict";e.r(a);var t=function(){var n=this,a=n.$createElement,e=n._self._c||a;return e("div",{domProps:{innerHTML:n._s(n.format(n.text))}})},d=[],r={data:function(){return{text:"\n# html\n\n## 路径\n\n/：根目录，一般用于本地静态服务或网站服务\n./：当前目录，本来不写默认就是当前目录，常用于书写完整目录\n../：目录层级回到上一级\n\n## 命名\n\n图片命名时不应用数字而是类型，数字是连接的，缺少某个就不规整了，而类型是归类独立的\n\n## 常见问题\n\n### 嵌套\n\n#### p 标签内不能嵌套块级（block）元素，否则会被嵌套的标签分隔\n\n··html\n<p>\n    123\n    <div>456</div>\n</p>\n\n\x3c!-- 在浏览器中变成 --\x3e\n<p>\n    123\n</p>\n<div>456</div>\n<p></p>\n··\n\na 标签不能嵌套 a 标签，否则会被分开\n\n··html\n<a>\n    123\n    <a>a</a>\n</a>\n\n\x3c!-- 在浏览器中变成 --\x3e\n<a>\n    123\n</a>\n<a>a</a>\n··\n\n### readonly 和 disabled\n\n!!\nreadonly 在输入框中有效，即·input[text], input[password], textarea·，disabled 都可以\nreadonly 外观无变化，disable 背景会变灰色\nreadonly 可聚焦，disable 不行\n用于表单提交时 readonly 会提交，disable 不会\n!!\n\n## 小技巧\n\n图片加载失败\n\n!!\n使用背景图片，适用于头像类\n图片监听·error·事件然后替换·src·\n图片监听·load·事件然后判断图片大小、宽高若为 0 则替换·src·\n!!\n            "}}},l=r,i=e("2877"),o=Object(i["a"])(l,t,d,!1,null,null,null);a["default"]=o.exports}}]);
//# sourceMappingURL=chunk-2d0c78e0.9547cbc5.js.map