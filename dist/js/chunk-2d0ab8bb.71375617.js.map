{"version":3,"sources":["webpack:///./src/pages/article/js/demo.vue?c0de","webpack:///src/pages/article/js/demo.vue","webpack:///./src/pages/article/js/demo.vue?fa4a","webpack:///./src/pages/article/js/demo.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","domProps","_s","format","text","staticRenderFns","component"],"mappings":"uHAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,SAAS,CAAC,UAAYN,EAAIO,GAAGP,EAAIQ,OAAOR,EAAIS,WAClJC,EAAkB,GCItB,GACE,KADF,WAEI,MAAJ,CACM,KAAN,4uGCR4W,I,YCOxWC,EAAY,eACd,EACAZ,EACAW,GACA,EACA,KACA,KACA,MAIa,aAAAC,E","file":"js/chunk-2d0ab8bb.71375617.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{domProps:{\"innerHTML\":_vm._s(_vm.format(_vm.text))}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <div v-html=\"format(text)\"></div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data () {\r\n        return {\r\n            text: `\r\n# demo\r\n\r\n## 小技巧\r\n\r\n（在团队项目中，还是要少用语义难以理解的小技巧，避免增加沟通成本）\r\n\r\n### 一句话\r\n\r\n!!\r\n使用构造函数时如果不传参数则可以省略括号，例如·new Date·\r\n!!\r\n\r\n### 判断数据类型\r\n\r\n·Object.prototype.toString()·返回对象的类型字符串，因此可以用来判断一个值的类型\r\n由于实例对象可能会自定义·toString()·，从而被覆盖掉，所以最好直接使用·Object.prototype.toString()·\r\n而通过函数的·call()·，可以在任意值上调用\r\n\r\n!!\r\n数值：返回·[object Number]·\r\n字符串：返回·[object String]·\r\n布尔值：返回·[object Boolean]·\r\nundefined：返回·[object Undefined]·\r\nnull：返回·[object Null]·\r\n数组：返回·[object Array]·\r\narguments 对象：返回·[object Arguments]·\r\n函数：返回·[object Function]·\r\nError 对象：返回·[object Error]·\r\nDate 对象：返回·[object Date]·\r\nRegExp 对象：返回·[object RegExp]·\r\n其他对象：返回·[object Object]·\r\n!!\r\n\r\n··js\r\nconst type = obj => {\r\n    const str = Object.prototype.toString.call(obj)\r\n    return str.match(/\\\\[object (.*?)\\\\]/)[1].toLowerCase()\r\n}\r\n\r\ntype({}) // \"object\"\r\ntype([]) // \"array\"\r\ntype(5) // \"number\"\r\ntype(null) // \"null\"\r\ntype() // \"undefined\"\r\ntype(/abcd/) // \"regex\"\r\ntype(new Date()) // \"date\"\r\n··\r\n\r\n在此基础上可延伸出判断某种数据类型的方法\r\n\r\n··js\r\nconst type = obj => {\r\n    const str = Object.prototype.toString.call(obj)\r\n    return str.match(/\\\\[object (.*?)\\\\]/)[1].toLowerCase()\r\n}\r\n\r\nconst typeList = ['Null', 'Undefined', 'Object', 'Array', 'String', 'Number', 'Boolean', 'Function', 'RegExp']\r\ntypeList.forEach(item => {\r\n    type['is' + item] = obj => type(o) === item.toLowerCase()\r\n})\r\n\r\ntype.isObject({}) // true\r\ntype.isNumber(NaN) // true\r\ntype.isRegExp(/abc/) // true\r\n··\r\n\r\n## 编程模式\r\n\r\n### 三元嵌套\r\n\r\n··js\r\n// bad\r\nlet result = null\r\nif (conditionA) {\r\n    if (conditionB) {\r\n        result = \"A & B\"\r\n    } else {\r\n        result = \"A\"\r\n    }\r\n} else {\r\n    result = \"Not A\"\r\n}\r\n\r\n// good\r\nconst result = !conditionA ? \"Not A\" :\r\n    conditionB ? \"A & B\" : \"A\"\r\n··\r\n\r\n### object 代替 switch\r\n\r\n不必担心·case·或·break·，代码意图明确，当需要用·switch·处理很多逻辑时可以考虑用·object literal·代替\r\n\r\n··js\r\n// switch\r\nswitch (str) {\r\n    case 'a': return 'AAA'\r\n    case 'b': return 'BBB'\r\n    case 'c': return 'CCC'\r\n    default: return 'DDD'\r\n}\r\n\r\n// object literal\r\nconst swap = {\r\n    a: () => 'AAA',\r\n    b: () => 'BBB',\r\n    c: () => 'CCC',\r\n    default: () => 'DDD'\r\n}\r\nconst str = (swap[str] || swap['default'])()\r\n··\r\n\r\n## 小功能\r\n\r\n### 空闲计时\r\n\r\n!!\r\n介绍：页面无操作后一段时间后触发事件\r\n场景：当前页面需要一直展示，但用户也可以临时查看其他页面，所以在用户无操作一段时间后仍然返回当前页面\r\n思路：设定时间，递减时间，直到为 0 触发事件，监听鼠标、键盘、触摸事件，有任何事件触发都将时间重置为初始时间\r\n!!\r\n\r\n··js\r\nconst event = 'click dblclick contextmenu mousemove wheel keydown touchstart touchmove'.split(' ')\r\nconst freeTimer = countdown => {\r\n    let time = countdown\r\n    const call = () => {\r\n        time--\r\n        time\r\n            ? setTimeout(call, 1000) : confirm('时间到，是否继续？')\r\n            ? setTimeout(call, 1000) : removeEvent()\r\n    }\r\n    setTimeout(call, 1000)\r\n    let lowerFrame = null\r\n    const watch = e => {\r\n        // 触发频率高的事件降频以减少卡顿\r\n        if (/mousemove|wheel|keydown|touchmove/.test(e.type)) {\r\n            if (!lowerFrame) {\r\n                lowerFrame = setTimeout(() => {\r\n                    lowerFrame = null\r\n                    time = countdown\r\n                }, 100)\r\n            }\r\n        } else {\r\n            time = countdown\r\n        }\r\n    }\r\n    event.forEach(item => document.addEventListener(item, watch))\r\n    const removeEvent = () => event.forEach(item => document.removeEventListener(item, watch))\r\n}\r\nfreeTimer(5 * 60)\r\n··\r\n\r\n&2019/11/10\r\n`\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./demo.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./demo.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./demo.vue?vue&type=template&id=537b3860&\"\nimport script from \"./demo.vue?vue&type=script&lang=js&\"\nexport * from \"./demo.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}